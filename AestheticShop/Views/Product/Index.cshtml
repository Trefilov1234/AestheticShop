@{
    ViewData["Title"] = "Home Page";
}

@model IndexViewModel

@* @await Component.InvokeAsync("Pagination",new {currentPages=1}) *@
<vc:pagination 
current-page="@Model.CurrentPage" 
total-pages="@Model.TotalPages" 
action="Index" 
controller="Product"
limit="@Model.LimitPage"
tag-id="@Model.SelectedTagId"
category-id="@Model.SelectedCategoryId"></vc:pagination>
<div class="row">
    <h1>@ViewBag.UserName</h1>
    <div class="col-2">
        <a class="btn btn-outline-info" asp-controller="Product" asp-action="Index">Reset</a>
        <hr />
        <div class="row">
            
            <h3>Categories</h3>
            <div class="list-group">
                @if (Model.Categories != null)
                {
                    foreach (var item in @Model.Categories)
                    {
                        <a asp-action="Index" asp-controller="Product" asp-route-categoryId="@item.Id" asp-route-tagId="@Model.SelectedTagId"
                           class="list-group-item list-group-item-action @(Model.SelectedCategoryId==item.Id ? "active" : ' ') ">@item.Name</a>
                    }
                }
            </div>
        </div>

        <div class="row">
            <h3>Tags</h3>
            <hr />
            <div class="list-group">
                @if (Model.Tags != null)
                {
                    foreach (var item in @Model.Tags)
                    {
                        <a asp-action="Index" asp-controller="Product" asp-route-tagId="@item.Id" asp-route-categoryId="@Model.SelectedCategoryId"
                           class="list-group-item list-group-item-action @(Model.SelectedTagId==item.Id ? "active" : ' ') ">@item.Name</a>
                    }
                }

            </div>
        </div>
    </div>
    <div class="col-10">
        @if (TempData.ContainsKey("status"))
        {

            <div class="alert alert-warning alert-dismissible fade show" role="alert">
                <strong>Messages!</strong>@TempData["status"].
                <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
            </div>
        }

        @if (Model.Products != null && Model.Products.Count() > 0)
        {
            <div class="row">
                @foreach (var item in Model.Products)
                {
                    <div class="card col-4" style="width: 18rem;">
                        <img src="@item.ImageUrl" class="card-img-top" alt="...">
                        <div class="card-body">
                            <h5 class="card-title">@item.Name</h5>
                            <hr>
                                @if (item.ProductTags.Count() > 0)
                                {
                                @foreach (var tags in item.ProductTags)
                                {
                                    <span class="badge bg-primary rounded-pill">@tags.Tag.Name</span>
                                }
                                }
                                else
                                {
                                    <span class="badge bg-danger rounded-pill">None</span>
                                }
                            <hr>
                            <span>@item.Category.Name</span>
                            <p class="card-text">@Html.Raw(@item.Description)</p>
                            <span>Rating: @item.Rating</span>
                            <span>Price: @item.Price</span>
                            <br>
                            <a asp-action="Details" asp-controller="Product" asp-route-id="@item.Id" class="btn btn-primary">Details</a>
                            <a asp-action="Edit" asp-controller="Product" asp-route-id="@item.Id" class="btn btn-primary">Edit</a>
                            <a asp-action="Delete" asp-controller="Product" asp-route-id="@item.Id" class="btn btn-primary">Delete</a>
                        </div>
                    </div>
                }
            </div>
        }
        else if (@Model.Products.Count() == 0)
        {
            <h3>Not found</h3>
        }
    </div>
</div>
